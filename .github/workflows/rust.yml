on:
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - '**'
env:
  CARGO_TERM_COLOR: always

name: Rust Checker

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true

    - name: Run cargo check
      uses: actions-rs/cargo@v1
      with:
        command: check

  clippy:
    name: Check clippy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
          components: clippy

    - run: cargo clippy -- -D warnings

  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true

    - name: Run test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose

# Readd when RustFmt v2.0.0 becomes stable
#  format:
#    name: Checking format
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Install latest nightly
#      uses: actions-rs/toolchain@v1
#      with:
#          toolchain: nightly
#          override: true
#          components: rustfmt
#
#    - name: Run format check
#      uses: actions-rs/cargo@v1
#      with:
#        command: fmt
#        args: -- --check
